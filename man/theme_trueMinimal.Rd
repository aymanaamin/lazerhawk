% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggClean.R
\name{theme_trueMinimal}
\alias{theme_ggvis}
\alias{theme_plotly}
\alias{theme_trueMinimal}
\title{Clean visualizations}
\usage{
theme_trueMinimal()

theme_ggvis(vis)

theme_plotly(vis)
}
\arguments{
\item{vis}{A plotly, or ggvis}
}
\description{
Clean up plots from their defaults.
}
\details{
From a gray background, to unnecessary gridlines, to by-default reference lines, some of the more popular visualization packages come out 75% fantastic and 25% wtf?.  These functions remove unnecessary gridlines, 'de-bold' the blacks, etc.
**ggplot2**: This function takes a ggplot object and removes the gray background, gridlines and adds opacity to the default black axes and labels, allowing the pattern of the visual to be expressed in unimpeded fashion.

While ggvis looks to be abandonware at this point, and as such I'm not really using it anymore, I leave this here just in case. Like ggplot2, ggvis by default will criss-cross a plot with gridlines, something I almost never need and is completely unnecessary if one has interactive hover over effects like ggvis can do.  It simply uses the add_axis function in ggvis and so any part of it can be overridden by supplying your own add_axis after.

Plotly will put reference lines at zero, and some of its 'modebar' is unnecessary.  Otherwise little is changed at this point.
}
\examples{
require(lazerhawk)
require(ggplot2)
require(ggvis)
require(plotly)
data(mtcars)
mtcars \%>\% ggplot(aes(wt, mpg)) + theme_trueMinimal()
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% theme_ggvis()
mtcars \%>\% plot_ly(x=~wt, y=~mpg, mode='markers') \%>\% theme_plotly()
}

